{
    "sourceFile": "script.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1758814015330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758844721922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,77 +1,312 @@\n-   // Payment method selection\r\n-        document.querySelectorAll('.payment-method').forEach(method => {\r\n-            method.addEventListener('click', function() {\r\n+ // Checkout Page Functionality\r\n+        class CheckoutPage {\r\n+            constructor() {\r\n+                this.cart = JSON.parse(localStorage.getItem('checkoutCart')) || [];\r\n+                this.totals = JSON.parse(localStorage.getItem('checkoutTotals')) || {};\r\n+                this.init();\r\n+            }\r\n+\r\n+            init() {\r\n+                this.renderOrderSummary();\r\n+                this.updatePaymentAmounts();\r\n+                this.bindEvents();\r\n+                this.validateForm();\r\n+                this.updateCartCount();\r\n+            }\r\n+\r\n+            renderOrderSummary() {\r\n+                const orderItems = document.getElementById('orderItems');\r\n+                \r\n+                if (this.cart.length === 0) {\r\n+                    orderItems.innerHTML = `\r\n+                        <div class=\"empty-cart-message\">\r\n+                            <i class=\"fas fa-shopping-cart\"></i>\r\n+                            <p>No items in cart</p>\r\n+                            <a href=\"products.html\" style=\"color: #18685b; text-decoration: none; font-weight: 600;\">Back to Products</a>\r\n+                        </div>\r\n+                    `;\r\n+                    this.updateOrderTotals();\r\n+                    return;\r\n+                }\r\n+\r\n+                let itemsHTML = '';\r\n+                this.cart.forEach(item => {\r\n+                    // Convert USD to SDG (1 USD = 600 SDG)\r\n+                    const sdgPrice = (item.price * 600).toLocaleString();\r\n+                    const totalSDG = (item.price * item.quantity * 600).toLocaleString();\r\n+                    \r\n+                    itemsHTML += `\r\n+                        <div class=\"order-item\">\r\n+                            <div class=\"item-image\">\r\n+                                <img src=\"${item.image}\" alt=\"${item.title}\">\r\n+                            </div>\r\n+                            <div class=\"item-details\">\r\n+                                <div class=\"item-name\">${item.title}</div>\r\n+                                <div class=\"item-price\">SDG ${totalSDG}</div>\r\n+                                <div class=\"item-quantity\">Quantity: ${item.quantity}</div>\r\n+                                <div class=\"item-unit-price\">SDG ${sdgPrice} each</div>\r\n+                            </div>\r\n+                        </div>\r\n+                    `;\r\n+                });\r\n+\r\n+                orderItems.innerHTML = itemsHTML;\r\n+                this.updateOrderTotals();\r\n+            }\r\n+\r\n+            updateOrderTotals() {\r\n+                if (this.cart.length === 0) {\r\n+                    document.getElementById('subtotalAmount').textContent = 'SDG 0';\r\n+                    document.getElementById('shippingAmount').textContent = 'SDG 0';\r\n+                    document.getElementById('taxAmount').textContent = 'SDG 0';\r\n+                    document.getElementById('totalAmount').textContent = 'SDG 0';\r\n+                    return;\r\n+                }\r\n+\r\n+                const subtotalSDG = (this.totals.subtotal * 600).toLocaleString();\r\n+                const shippingSDG = (this.totals.shipping * 600).toLocaleString();\r\n+                const taxSDG = (this.totals.tax * 600).toLocaleString();\r\n+                const totalSDG = (this.totals.total * 600).toLocaleString();\r\n+\r\n+                document.getElementById('subtotalAmount').textContent = `SDG ${subtotalSDG}`;\r\n+                document.getElementById('shippingAmount').textContent = `SDG ${shippingSDG}`;\r\n+                document.getElementById('taxAmount').textContent = `SDG ${taxSDG}`;\r\n+                document.getElementById('totalAmount').textContent = `SDG ${totalSDG}`;\r\n\\ No newline at end of file\n+            }\r\n+\r\n+            updatePaymentAmounts() {\r\n+                if (this.cart.length === 0) return;\r\n+\r\n+                const totalSDG = (this.totals.total * 600).toLocaleString();\r\n+                \r\n+                // Update all payment method amounts\r\n+                document.querySelectorAll('#bankak-amount, #ocash-amount, #cod-amount').forEach(element => {\r\n+                    element.textContent = `SDG ${totalSDG}`;\r\n+                });\r\n+            }\r\n+\r\n+            bindEvents() {\r\n+                // Payment method selection\r\n+                document.querySelectorAll('.payment-method').forEach(method => {\r\n+                    method.addEventListener('click', () => {\r\n+                        this.selectPaymentMethod(method);\r\n+                    });\r\n+                });\r\n+\r\n+                // Form validation on input\r\n+                const formInputs = document.querySelectorAll('.form-input');\r\n+                formInputs.forEach(input => {\r\n+                    input.addEventListener('input', () => {\r\n+                        this.validateForm();\r\n+                    });\r\n+                    \r\n+                    input.addEventListener('blur', () => {\r\n+                        this.validateField(input);\r\n+                    });\r\n+                });\r\n+\r\n+                // Checkout button\r\n+                document.getElementById('checkout-btn').addEventListener('click', () => {\r\n+                    this.processCheckout();\r\n+                });\r\n+            }\r\n+\r\n+            selectPaymentMethod(method) {\r\n                 // Remove selected class from all methods\r\n                 document.querySelectorAll('.payment-method').forEach(m => {\r\n                     m.classList.remove('selected');\r\n                     m.querySelector('.fa-check-circle').style.display = 'none';\r\n                 });\r\n                 \r\n                 // Add selected class to clicked method\r\n-                this.classList.add('selected');\r\n-                this.querySelector('.fa-check-circle').style.display = 'block';\r\n+                method.classList.add('selected');\r\n+                method.querySelector('.fa-check-circle').style.display = 'block';\r\n                 \r\n                 // Hide all instructions\r\n                 document.querySelectorAll('.payment-instructions').forEach(instruction => {\r\n                     instruction.classList.remove('active');\r\n                 });\r\n                 \r\n                 // Show instructions for selected method\r\n-                const methodType = this.getAttribute('data-method');\r\n+                const methodType = method.getAttribute('data-method');\r\n                 document.getElementById(`${methodType}-instructions`).classList.add('active');\r\n                 \r\n-                // Enable checkout button\r\n-                document.getElementById('checkout-btn').disabled = false;\r\n-            });\r\n-        });\r\n-        \r\n-        // Form validation\r\n-        const formInputs = document.querySelectorAll('.form-input');\r\n-        formInputs.forEach(input => {\r\n-            input.addEventListener('input', function() {\r\n-                validateForm();\r\n-            });\r\n-        });\r\n-        \r\n-        function validateForm() {\r\n-            let isValid = true;\r\n-            \r\n-            formInputs.forEach(input => {\r\n-                if (input.hasAttribute('required') && !input.value.trim()) {\r\n+                this.validateForm();\r\n+            }\r\n+\r\n+            validateField(input) {\r\n+                const value = input.value.trim();\r\n+                let isValid = true;\r\n+                let errorMessage = '';\r\n+\r\n+                // Clear previous error\r\n+                this.clearFieldError(input);\r\n+\r\n+                switch(input.id) {\r\n+                    case 'fullName':\r\n+                        isValid = value.length >= 2;\r\n+                        errorMessage = 'Name must be at least 2 characters long';\r\n+                        break;\r\n+                    case 'email':\r\n+                        isValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value);\r\n+                        errorMessage = 'Please enter a valid email address';\r\n+                        break;\r\n+                    case 'phone':\r\n+                        isValid = /^(\\+249|0)[0-9]{9}$/.test(value);\r\n+                        errorMessage = 'Please enter a valid Sudanese phone number';\r\n+                        break;\r\n+                    case 'address':\r\n+                        isValid = value.length >= 5;\r\n+                        errorMessage = 'Please enter a valid address';\r\n+                        break;\r\n+                    case 'city':\r\n+                        isValid = value.length >= 2;\r\n+                        errorMessage = 'Please enter a valid city name';\r\n+                        break;\r\n+                    case 'state':\r\n+                        isValid = value.length >= 2;\r\n+                        errorMessage = 'Please enter a valid state/region';\r\n+                        break;\r\n+                }\r\n+\r\n+                if (!isValid && value !== '') {\r\n+                    this.showFieldError(input, errorMessage);\r\n+                }\r\n+\r\n+                return isValid;\r\n+            }\r\n+\r\n+            showFieldError(input, message) {\r\n+                const errorDiv = document.createElement('div');\r\n+                errorDiv.className = 'field-error';\r\n+                errorDiv.textContent = message;\r\n+                input.parentNode.appendChild(errorDiv);\r\n+                input.style.borderColor = '#ff6b6b';\r\n+            }\r\n+\r\n+            clearFieldError(input) {\r\n+                const existingError = input.parentNode.querySelector('.field-error');\r\n+                if (existingError) {\r\n+                    existingError.remove();\r\n+                }\r\n+                input.style.borderColor = '#ddd';\r\n+            }\r\n+\r\n+            validateForm() {\r\n+                if (this.cart.length === 0) {\r\n+                    document.getElementById('checkout-btn').disabled = true;\r\n+                    return false;\r\n+                }\r\n+\r\n+                let isValid = true;\r\n+                \r\n+                // Validate required fields\r\n+                const requiredInputs = document.querySelectorAll('.form-input[required]');\r\n+                requiredInputs.forEach(input => {\r\n+                    if (!input.value.trim()) {\r\n+                        isValid = false;\r\n+                    } else if (!this.validateField(input)) {\r\n+                        isValid = false;\r\n+                    }\r\n+                });\r\n+                \r\n+                // Validate payment method\r\n+                const paymentSelected = document.querySelector('.payment-method.selected');\r\n+                if (!paymentSelected) {\r\n                     isValid = false;\r\n                 }\r\n-            });\r\n-            \r\n-            const paymentSelected = document.querySelector('.payment-method.selected');\r\n-            if (!paymentSelected) {\r\n-                isValid = false;\r\n+                \r\n+                document.getElementById('checkout-btn').disabled = !isValid;\r\n+                return isValid;\r\n             }\r\n-            \r\n-            document.getElementById('checkout-btn').disabled = !isValid;\r\n-        }\r\n-        \r\n-        // Checkout button functionality\r\n-        document.getElementById('checkout-btn').addEventListener('click', function() {\r\n-            if (this.disabled) return;\r\n-            \r\n-            // Show loading state\r\n-            const originalText = this.innerHTML;\r\n-            this.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Processing...';\r\n-            this.disabled = true;\r\n-            \r\n-            // Simulate processing\r\n-            setTimeout(() => {\r\n-                // In a real implementation, this would submit the form\r\n-                alert('Order placed successfully! You will receive a confirmation email shortly.');\r\n+\r\n+            processCheckout() {\r\n+                if (!this.validateForm()) return;\r\n                 \r\n-                // Reset button\r\n-                this.innerHTML = originalText;\r\n-                this.disabled = false;\r\n+                const checkoutBtn = document.getElementById('checkout-btn');\r\n+                const originalText = checkoutBtn.innerHTML;\r\n                 \r\n-                // Redirect to confirmation page\r\n-                window.location.href = 'confirmation.html';\r\n-            }, 2000);\r\n-        });\r\n-        \r\n-        // Initialize form validation\r\n-        validateForm();\n+                // Show loading state\r\n+                checkoutBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Processing...';\r\n+                checkoutBtn.disabled = true;\r\n+                \r\n+                // Collect form data\r\n+                const formData = {\r\n+                    customerInfo: {\r\n+                        fullName: document.getElementById('fullName').value,\r\n+                        email: document.getElementById('email').value,\r\n+                        phone: document.getElementById('phone').value,\r\n+                        address: document.getElementById('address').value,\r\n+                        city: document.getElementById('city').value,\r\n+                        state: document.getElementById('state').value,\r\n+                        notes: document.getElementById('notes').value\r\n+                    },\r\n+                    paymentMethod: document.querySelector('.payment-method.selected').getAttribute('data-method'),\r\n+                    orderItems: this.cart,\r\n+                    totals: this.totals,\r\n+                    orderDate: new Date().toISOString(),\r\n+                    orderId: 'TB' + Date.now().toString().slice(-6)\r\n+                };\r\n+                \r\n+                // Simulate API call\r\n+                setTimeout(() => {\r\n+                    // Save order data\r\n+                    localStorage.setItem('orderConfirmation', JSON.stringify(formData));\r\n+                    \r\n+                    // Clear cart data\r\n+                    localStorage.removeItem('techBazzarCart');\r\n+                    localStorage.removeItem('checkoutCart');\r\n+                    localStorage.removeItem('checkoutTotals');\r\n+                    \r\n+                    // Show success message\r\n+                    this.showSuccessMessage();\r\n+                    \r\n+                    // Redirect to confirmation page\r\n+                    setTimeout(() => {\r\n+                        window.location.href = 'confirmation.html';\r\n+                    }, 2000);\r\n+                    \r\n+                }, 2000);\r\n+            }\r\n+\r\n+            showSuccessMessage() {\r\n+                const successDiv = document.createElement('div');\r\n+                successDiv.style.cssText = `\r\n+                    position: fixed;\r\n+                    top: 50%;\r\n+                    left: 50%;\r\n+                    transform: translate(-50%, -50%);\r\n+                    background: linear-gradient(135deg, #4CAF50, #45a049);\r\n+                    color: white;\r\n+                    padding: 20px 30px;\r\n+                    border-radius: 10px;\r\n+                    z-index: 2000;\r\n+                    display: flex;\r\n+                    align-items: center;\r\n+                    gap: 10px;\r\n+                    font-size: 1.1rem;\r\n+                    box-shadow: 0 10px 30px rgba(0,0,0,0.3);\r\n+                `;\r\n+                successDiv.innerHTML = `\r\n+                    <i class=\"fas fa-check-circle\"></i>\r\n+                    <span>Order placed successfully! Redirecting...</span>\r\n+                `;\r\n+                \r\n+                document.body.appendChild(successDiv);\r\n+                \r\n+                setTimeout(() => {\r\n+                    successDiv.remove();\r\n+                }, 1900);\r\n+            }\r\n+\r\n+            updateCartCount() {\r\n+                const cart = JSON.parse(localStorage.getItem('techBazzarCart')) || [];\r\n+                const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);\r\n+                document.querySelector('.cart-count').textContent = totalItems;\r\n+            }\r\n+        }\r\n+\r\n+        // Initialize checkout page when loaded\r\n+        document.addEventListener('DOMContentLoaded', function() {\r\n+            new CheckoutPage();\r\n+        });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758845647684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n- // Checkout Page Functionality\r\n+  // Checkout Page Functionality\r\n         class CheckoutPage {\r\n             constructor() {\r\n                 this.cart = JSON.parse(localStorage.getItem('checkoutCart')) || [];\r\n                 this.totals = JSON.parse(localStorage.getItem('checkoutTotals')) || {};\r\n@@ -11,8 +11,9 @@\n                 this.updatePaymentAmounts();\r\n                 this.bindEvents();\r\n                 this.validateForm();\r\n                 this.updateCartCount();\r\n+                this.updateLoginUI();\r\n             }\r\n \r\n             renderOrderSummary() {\r\n                 const orderItems = document.getElementById('orderItems');\r\n@@ -21,9 +22,9 @@\n                     orderItems.innerHTML = `\r\n                         <div class=\"empty-cart-message\">\r\n                             <i class=\"fas fa-shopping-cart\"></i>\r\n                             <p>No items in cart</p>\r\n-                            <a href=\"products.html\" style=\"color: #18685b; text-decoration: none; font-weight: 600;\">Back to Products</a>\r\n+                            <a href=\"../products/products.html\" style=\"color: #18685b; text-decoration: none; font-weight: 600;\">Back to Products</a>\r\n                         </div>\r\n                     `;\r\n                     this.updateOrderTotals();\r\n                     return;\r\n@@ -303,8 +304,106 @@\n                 const cart = JSON.parse(localStorage.getItem('techBazzarCart')) || [];\r\n                 const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);\r\n                 document.querySelector('.cart-count').textContent = totalItems;\r\n             }\r\n+\r\n+            updateLoginUI() {\r\n+                const userInfo = JSON.parse(localStorage.getItem('techBazzarUser'));\r\n+                const loginButtonContainer = document.getElementById('loginButtonContainer');\r\n+                \r\n+                if (userInfo) {\r\n+                    // User is logged in - show profile instead of login button\r\n+                    loginButtonContainer.innerHTML = `\r\n+                        <div class=\"user-profile-dropdown\">\r\n+                            <button class=\"user-profile-btn\">\r\n+                                <div class=\"user-avatar\">\r\n+                                    <img src=\"https://ui-avatars.com/api/?name=${encodeURIComponent(userInfo.name || userInfo.email)}&background=18685b&color=fff&size=32\" alt=\"User Avatar\">\r\n+                                </div>\r\n+                                <span class=\"user-name\">${userInfo.name || userInfo.email.split('@')[0]}</span>\r\n+                                <i class=\"fas fa-chevron-down\"></i>\r\n+                            </button>\r\n+                            <div class=\"user-dropdown-menu\">\r\n+                                <div class=\"user-info\">\r\n+                                    <div class=\"user-avatar-large\">\r\n+                                        <img src=\"https://ui-avatars.com/api/?name=${encodeURIComponent(userInfo.name || userInfo.email)}&background=18685b&color=fff&size=64\" alt=\"User Avatar\">\r\n+                                    </div>\r\n+                                    <div class=\"user-details\">\r\n+                                        <h4>${userInfo.name || 'User'}</h4>\r\n+                                        <p>${userInfo.email}</p>\r\n+                                        <span class=\"user-role-badge\">${userInfo.role === 'seller' ? 'Seller' : 'Buyer'}</span>\r\n+                                    </div>\r\n+                                </div>\r\n+                                <div class=\"dropdown-divider\"></div>\r\n+                                <a href=\"../profile/profile.html\" class=\"dropdown-item\">\r\n+                                    <i class=\"fas fa-user\"></i>\r\n+                                    <span>My Profile</span>\r\n+                                </a>\r\n+                                <a href=\"../orders/orders.html\" class=\"dropdown-item\">\r\n+                                    <i class=\"fas fa-shopping-bag\"></i>\r\n+                                    <span>My Orders</span>\r\n+                                </a>\r\n+                                <a href=\"../wishlist/wishlist.html\" class=\"dropdown-item\">\r\n+                                    <i class=\"fas fa-heart\"></i>\r\n+                                    <span>Wishlist</span>\r\n+                                </a>\r\n+                                ${userInfo.role === 'seller' ? `\r\n+                                <a href=\"../seller dashboard/seller dashboard.html\" class=\"dropdown-item\">\r\n+                                    <i class=\"fas fa-store\"></i>\r\n+                                    <span>Seller Dashboard</span>\r\n+                                </a>\r\n+                                ` : ''}\r\n+                                <div class=\"dropdown-divider\"></div>\r\n+                                <a href=\"#\" class=\"dropdown-item\" id=\"logoutBtn\">\r\n+                                    <i class=\"fas fa-sign-out-alt\"></i>\r\n+                                    <span>Logout</span>\r\n+                                </a>\r\n+                            </div>\r\n+                        </div>\r\n+                    `;\r\n+                    \r\n+                    // Add event listeners for the dropdown\r\n+                    this.setupUserDropdown();\r\n+                } else {\r\n+                    // User is not logged in - show login button\r\n+                    loginButtonContainer.innerHTML = `\r\n+                        <a href=\"../login/login.html\"><button class=\"login-btn\">\r\n+                            <i class=\"fas fa-user\"></i>\r\n+                            <span>Login/Register</span>\r\n+                        </button></a>\r\n+                    `;\r\n+                }\r\n+            }\r\n+\r\n+            setupUserDropdown() {\r\n+                const userProfileBtn = document.querySelector('.user-profile-btn');\r\n+                const dropdownMenu = document.querySelector('.user-dropdown-menu');\r\n+                const logoutBtn = document.getElementById('logoutBtn');\r\n+                \r\n+                if (userProfileBtn && dropdownMenu) {\r\n+                    userProfileBtn.addEventListener('click', function(e) {\r\n+                        e.stopPropagation();\r\n+                        dropdownMenu.classList.toggle('show');\r\n+                    });\r\n+                    \r\n+                    // Close dropdown when clicking outside\r\n+                    document.addEventListener('click', function() {\r\n+                        dropdownMenu.classList.remove('show');\r\n+                    });\r\n+                    \r\n+                    // Prevent dropdown from closing when clicking inside\r\n+                    dropdownMenu.addEventListener('click', function(e) {\r\n+                        e.stopPropagation();\r\n+                    });\r\n+                }\r\n+                \r\n+                if (logoutBtn) {\r\n+                    logoutBtn.addEventListener('click', function(e) {\r\n+                        e.preventDefault();\r\n+                        localStorage.removeItem('techBazzarUser');\r\n+                        window.location.reload();\r\n+                    });\r\n+                }\r\n+            }\r\n         }\r\n \r\n         // Initialize checkout page when loaded\r\n         document.addEventListener('DOMContentLoaded', function() {\r\n"
                },
                {
                    "date": 1758846297090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -305,13 +305,13 @@\n                 const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);\r\n                 document.querySelector('.cart-count').textContent = totalItems;\r\n             }\r\n \r\n-            updateLoginUI() {\r\n-                const userInfo = JSON.parse(localStorage.getItem('techBazzarUser'));\r\n-                const loginButtonContainer = document.getElementById('loginButtonContainer');\r\n-                \r\n-                if (userInfo) {\r\n+                            uupdateLoginUI() {\r\n+                    const userInfo = JSON.parse(localStorage.getItem('techBazzarUser'));\r\n+                    const loginButtonContainer = document.querySelector('.nav-right'); // أو العنصر المناسب\r\n+                    \r\n+                    if (userInfo) {\r\n                     // User is logged in - show profile instead of login button\r\n                     loginButtonContainer.innerHTML = `\r\n                         <div class=\"user-profile-dropdown\">\r\n                             <button class=\"user-profile-btn\">\r\n@@ -362,16 +362,11 @@\n                     \r\n                     // Add event listeners for the dropdown\r\n                     this.setupUserDropdown();\r\n                 } else {\r\n-                    // User is not logged in - show login button\r\n-                    loginButtonContainer.innerHTML = `\r\n-                        <a href=\"../login/login.html\"><button class=\"login-btn\">\r\n-                            <i class=\"fas fa-user\"></i>\r\n-                            <span>Login/Register</span>\r\n-                        </button></a>\r\n-                    `;\r\n-                }\r\n+        // تصحيح المسار هنا أيضاً\r\n+        loginButtonContainer.querySelector('a').href = \"../login/login.html\";\r\n+    }\r\n             }\r\n \r\n             setupUserDropdown() {\r\n                 const userProfileBtn = document.querySelector('.user-profile-btn');\r\n"
                },
                {
                    "date": 1758846721880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -402,5 +402,89 @@\n \r\n         // Initialize checkout page when loaded\r\n         document.addEventListener('DOMContentLoaded', function() {\r\n             new CheckoutPage();\r\n-        });\n\\ No newline at end of file\n+        });\r\n+\r\n+        function updateLoginUI() {\r\n+    const navRight = document.getElementById('navRight');\r\n+    const userInfo = JSON.parse(localStorage.getItem('techBazzarUser'));\r\n+    \r\n+    if (userInfo) {\r\n+        // إذا كان المستخدم مسجل الدخول\r\n+        navRight.innerHTML = `\r\n+            <div class=\"user-profile-dropdown\">\r\n+                <button class=\"user-profile-btn\">\r\n+                    <div class=\"user-avatar\">\r\n+                        <img src=\"https://ui-avatars.com/api/?name=${encodeURIComponent(userInfo.name || userInfo.email)}&background=18685b&color=fff&size=32\" alt=\"User Avatar\">\r\n+                    </div>\r\n+                    <span class=\"user-name\">${userInfo.name || userInfo.email.split('@')[0]}</span>\r\n+                    <i class=\"fas fa-chevron-down\"></i>\r\n+                </button>\r\n+            </div>\r\n+            <button class=\"language-btn\" aria-label=\"Change language\">\r\n+                <i class=\"fa-solid fa-globe\"></i>\r\n+            </button>\r\n+            <a href=\"#cart\" class=\"cart-btn\" aria-label=\"Shopping cart\">\r\n+                <i class=\"fa-solid fa-cart-shopping\"></i>\r\n+                <span class=\"cart-count\">3</span>\r\n+            </a>\r\n+        `;\r\n+    } else {\r\n+        // إذا لم يكن المستخدم مسجل الدخول - استخدم المسار الصحيح\r\n+        navRight.innerHTML = `\r\n+            <a href=\"../login/login.html\" style=\"text-decoration: none;\">\r\n+                <button class=\"login-btn\">\r\n+                    <i class=\"fas fa-user\"></i>\r\n+                    <span>Login/Register</span>\r\n+                </button>\r\n+            </a>\r\n+            <button class=\"language-btn\" aria-label=\"Change language\">\r\n+                <i class=\"fa-solid fa-globe\"></i>\r\n+            </button>\r\n+            <a href=\"#cart\" class=\"cart-btn\" aria-label=\"Shopping cart\">\r\n+                <i class=\"fa-solid fa-cart-shopping\"></i>\r\n+                <span class=\"cart-count\">3</span>\r\n+            </a>\r\n+        `;\r\n+    }\r\n+}\r\n+\r\n+// تهيئة الصفحة عند التحميل\r\n+document.addEventListener('DOMContentLoaded', function() {\r\n+    updateLoginUI();\r\n+    \r\n+    // تهيئة زر الهامبرجر\r\n+    const hamburgerBtn = document.querySelector('.hamburger-btn');\r\n+    const navMenu = document.querySelector('.nav-menu');\r\n+    \r\n+    if (hamburgerBtn && navMenu) {\r\n+        hamburgerBtn.addEventListener('click', function() {\r\n+            this.classList.toggle('active');\r\n+            navMenu.classList.toggle('active');\r\n+        });\r\n+    }\r\n+});\r\n+\r\n+// دالة للتحقق من صحة المسار\r\n+function checkLoginPath() {\r\n+    const loginLink = document.querySelector('a[href*=\"login\"]');\r\n+    if (loginLink) {\r\n+        console.log('مسار اللوجين:', loginLink.href);\r\n+        \r\n+        // اختبار إذا كان المسار صحيح\r\n+        fetch(loginLink.href)\r\n+            .then(response => {\r\n+                if (response.ok) {\r\n+                    console.log('✅ صفحة اللوجين موجودة');\r\n+                } else {\r\n+                    console.log('❌ صفحة اللوجين غير موجودة');\r\n+                }\r\n+            })\r\n+            .catch(error => {\r\n+                console.log('❌ خطأ في الوصول لصفحة اللوجين:', error);\r\n+            });\r\n+    }\r\n+}\r\n+\r\n+// تحقق من المسار بعد تحميل الصفحة\r\n+setTimeout(checkLoginPath, 1000);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758846756637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -404,87 +404,5 @@\n         document.addEventListener('DOMContentLoaded', function() {\r\n             new CheckoutPage();\r\n         });\r\n \r\n-        function updateLoginUI() {\r\n-    const navRight = document.getElementById('navRight');\r\n-    const userInfo = JSON.parse(localStorage.getItem('techBazzarUser'));\r\n-    \r\n-    if (userInfo) {\r\n-        // إذا كان المستخدم مسجل الدخول\r\n-        navRight.innerHTML = `\r\n-            <div class=\"user-profile-dropdown\">\r\n-                <button class=\"user-profile-btn\">\r\n-                    <div class=\"user-avatar\">\r\n-                        <img src=\"https://ui-avatars.com/api/?name=${encodeURIComponent(userInfo.name || userInfo.email)}&background=18685b&color=fff&size=32\" alt=\"User Avatar\">\r\n-                    </div>\r\n-                    <span class=\"user-name\">${userInfo.name || userInfo.email.split('@')[0]}</span>\r\n-                    <i class=\"fas fa-chevron-down\"></i>\r\n-                </button>\r\n-            </div>\r\n-            <button class=\"language-btn\" aria-label=\"Change language\">\r\n-                <i class=\"fa-solid fa-globe\"></i>\r\n-            </button>\r\n-            <a href=\"#cart\" class=\"cart-btn\" aria-label=\"Shopping cart\">\r\n-                <i class=\"fa-solid fa-cart-shopping\"></i>\r\n-                <span class=\"cart-count\">3</span>\r\n-            </a>\r\n-        `;\r\n-    } else {\r\n-        // إذا لم يكن المستخدم مسجل الدخول - استخدم المسار الصحيح\r\n-        navRight.innerHTML = `\r\n-            <a href=\"../login/login.html\" style=\"text-decoration: none;\">\r\n-                <button class=\"login-btn\">\r\n-                    <i class=\"fas fa-user\"></i>\r\n-                    <span>Login/Register</span>\r\n-                </button>\r\n-            </a>\r\n-            <button class=\"language-btn\" aria-label=\"Change language\">\r\n-                <i class=\"fa-solid fa-globe\"></i>\r\n-            </button>\r\n-            <a href=\"#cart\" class=\"cart-btn\" aria-label=\"Shopping cart\">\r\n-                <i class=\"fa-solid fa-cart-shopping\"></i>\r\n-                <span class=\"cart-count\">3</span>\r\n-            </a>\r\n-        `;\r\n-    }\r\n-}\r\n-\r\n-// تهيئة الصفحة عند التحميل\r\n-document.addEventListener('DOMContentLoaded', function() {\r\n-    updateLoginUI();\r\n-    \r\n-    // تهيئة زر الهامبرجر\r\n-    const hamburgerBtn = document.querySelector('.hamburger-btn');\r\n-    const navMenu = document.querySelector('.nav-menu');\r\n-    \r\n-    if (hamburgerBtn && navMenu) {\r\n-        hamburgerBtn.addEventListener('click', function() {\r\n-            this.classList.toggle('active');\r\n-            navMenu.classList.toggle('active');\r\n-        });\r\n-    }\r\n-});\r\n-\r\n-// دالة للتحقق من صحة المسار\r\n-function checkLoginPath() {\r\n-    const loginLink = document.querySelector('a[href*=\"login\"]');\r\n-    if (loginLink) {\r\n-        console.log('مسار اللوجين:', loginLink.href);\r\n-        \r\n-        // اختبار إذا كان المسار صحيح\r\n-        fetch(loginLink.href)\r\n-            .then(response => {\r\n-                if (response.ok) {\r\n-                    console.log('✅ صفحة اللوجين موجودة');\r\n-                } else {\r\n-                    console.log('❌ صفحة اللوجين غير موجودة');\r\n-                }\r\n-            })\r\n-            .catch(error => {\r\n-                console.log('❌ خطأ في الوصول لصفحة اللوجين:', error);\r\n-            });\r\n-    }\r\n-}\r\n-\r\n-// تحقق من المسار بعد تحميل الصفحة\r\n-setTimeout(checkLoginPath, 1000);\n\\ No newline at end of file\n+        \n\\ No newline at end of file\n"
                }
            ],
            "date": 1758814015330,
            "name": "Commit-0",
            "content": "   // Payment method selection\r\n        document.querySelectorAll('.payment-method').forEach(method => {\r\n            method.addEventListener('click', function() {\r\n                // Remove selected class from all methods\r\n                document.querySelectorAll('.payment-method').forEach(m => {\r\n                    m.classList.remove('selected');\r\n                    m.querySelector('.fa-check-circle').style.display = 'none';\r\n                });\r\n                \r\n                // Add selected class to clicked method\r\n                this.classList.add('selected');\r\n                this.querySelector('.fa-check-circle').style.display = 'block';\r\n                \r\n                // Hide all instructions\r\n                document.querySelectorAll('.payment-instructions').forEach(instruction => {\r\n                    instruction.classList.remove('active');\r\n                });\r\n                \r\n                // Show instructions for selected method\r\n                const methodType = this.getAttribute('data-method');\r\n                document.getElementById(`${methodType}-instructions`).classList.add('active');\r\n                \r\n                // Enable checkout button\r\n                document.getElementById('checkout-btn').disabled = false;\r\n            });\r\n        });\r\n        \r\n        // Form validation\r\n        const formInputs = document.querySelectorAll('.form-input');\r\n        formInputs.forEach(input => {\r\n            input.addEventListener('input', function() {\r\n                validateForm();\r\n            });\r\n        });\r\n        \r\n        function validateForm() {\r\n            let isValid = true;\r\n            \r\n            formInputs.forEach(input => {\r\n                if (input.hasAttribute('required') && !input.value.trim()) {\r\n                    isValid = false;\r\n                }\r\n            });\r\n            \r\n            const paymentSelected = document.querySelector('.payment-method.selected');\r\n            if (!paymentSelected) {\r\n                isValid = false;\r\n            }\r\n            \r\n            document.getElementById('checkout-btn').disabled = !isValid;\r\n        }\r\n        \r\n        // Checkout button functionality\r\n        document.getElementById('checkout-btn').addEventListener('click', function() {\r\n            if (this.disabled) return;\r\n            \r\n            // Show loading state\r\n            const originalText = this.innerHTML;\r\n            this.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Processing...';\r\n            this.disabled = true;\r\n            \r\n            // Simulate processing\r\n            setTimeout(() => {\r\n                // In a real implementation, this would submit the form\r\n                alert('Order placed successfully! You will receive a confirmation email shortly.');\r\n                \r\n                // Reset button\r\n                this.innerHTML = originalText;\r\n                this.disabled = false;\r\n                \r\n                // Redirect to confirmation page\r\n                window.location.href = 'confirmation.html';\r\n            }, 2000);\r\n        });\r\n        \r\n        // Initialize form validation\r\n        validateForm();"
        }
    ]
}