{
    "sourceFile": "script.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1758814545464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1758814545464,
            "name": "Commit-0",
            "content": "  // Sample product data\r\n        const sampleProducts = [\r\n            {\r\n                id: 1,\r\n                name: \"MacBook Pro 2022\",\r\n                category: \"laptops\",\r\n                description: \"Apple MacBook Pro with M2 chip, 16GB RAM, 512GB SSD\",\r\n                price: 1299.00,\r\n                stock: 5,\r\n                image: \"laptop\"\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"Samsung Galaxy S23\",\r\n                category: \"smartphones\",\r\n                description: \"Latest Samsung flagship with advanced camera and performance\",\r\n                price: 899.00,\r\n                stock: 8,\r\n                image: \"phone\"\r\n            },\r\n            {\r\n                id: 3,\r\n                name: \"iPad Air 5th Gen\",\r\n                category: \"tablets\",\r\n                description: \"Apple iPad Air with M1 chip, 10.9-inch display\",\r\n                price: 599.00,\r\n                stock: 3,\r\n                image: \"tablet\"\r\n            },\r\n            {\r\n                id: 4,\r\n                name: \"Sony WH-1000XM4\",\r\n                category: \"accessories\",\r\n                description: \"Industry-leading noise canceling wireless headphones\",\r\n                price: 349.00,\r\n                stock: 12,\r\n                image: \"headphones\"\r\n            }\r\n        ];\r\n\r\n        // Current products (initially loaded with sample data)\r\n        let products = [...sampleProducts];\r\n        let editingProductId = null;\r\n\r\n        // DOM Elements\r\n        const sidebar = document.getElementById('sidebar');\r\n        const toggleSidebar = document.getElementById('toggleSidebar');\r\n        const menuItems = document.querySelectorAll('.menu-item');\r\n        const sections = document.querySelectorAll('.dashboard-section');\r\n        const pageTitle = document.getElementById('pageTitle');\r\n        const pageSubtitle = document.getElementById('pageSubtitle');\r\n        const productsContainer = document.getElementById('productsContainer');\r\n        const productModal = document.getElementById('productModal');\r\n        const modalTitle = document.getElementById('modalTitle');\r\n        const productForm = document.getElementById('productForm');\r\n        const closeModal = document.getElementById('closeModal');\r\n        const cancelProductBtn = document.getElementById('cancelProductBtn');\r\n        const addProductBtn = document.getElementById('addProductBtn');\r\n        const tabs = document.querySelectorAll('.tab');\r\n        const tabContents = document.querySelectorAll('.tab-content');\r\n\r\n        // Initialize the dashboard\r\n        document.addEventListener('DOMContentLoaded', function() {\r\n            // Load products\r\n            renderProducts();\r\n            \r\n            // Set up event listeners\r\n            setupEventListeners();\r\n        });\r\n\r\n        // Set up all event listeners\r\n        function setupEventListeners() {\r\n            // Toggle sidebar on mobile\r\n            toggleSidebar.addEventListener('click', function() {\r\n                sidebar.classList.toggle('active');\r\n            });\r\n\r\n            // Navigation menu\r\n            menuItems.forEach(item => {\r\n                item.addEventListener('click', function(e) {\r\n                    e.preventDefault();\r\n                    const sectionId = this.getAttribute('data-section');\r\n                    \r\n                    // Update active menu item\r\n                    menuItems.forEach(i => i.classList.remove('active'));\r\n                    this.classList.add('active');\r\n                    \r\n                    // Show corresponding section\r\n                    showSection(sectionId);\r\n                });\r\n            });\r\n\r\n            // Add product button\r\n            addProductBtn.addEventListener('click', function() {\r\n                openProductModal();\r\n            });\r\n\r\n            // Close modal buttons\r\n            closeModal.addEventListener('click', closeProductModal);\r\n            cancelProductBtn.addEventListener('click', closeProductModal);\r\n\r\n            // Product form submission\r\n            productForm.addEventListener('submit', function(e) {\r\n                e.preventDefault();\r\n                saveProduct();\r\n            });\r\n\r\n            // Settings tabs\r\n            tabs.forEach(tab => {\r\n                tab.addEventListener('click', function() {\r\n                    const tabId = this.getAttribute('data-tab');\r\n                    \r\n                    // Update active tab\r\n                    tabs.forEach(t => t.classList.remove('active'));\r\n                    this.classList.add('active');\r\n                    \r\n                    // Show corresponding content\r\n                    tabContents.forEach(content => content.classList.remove('active'));\r\n                    document.getElementById(`${tabId}-tab`).classList.add('active');\r\n                });\r\n            });\r\n\r\n            // Close modal when clicking outside\r\n            window.addEventListener('click', function(e) {\r\n                if (e.target === productModal) {\r\n                    closeProductModal();\r\n                }\r\n            });\r\n        }\r\n\r\n        // Show the selected section\r\n        function showSection(sectionId) {\r\n            // Hide all sections\r\n            sections.forEach(section => {\r\n                section.style.display = 'none';\r\n            });\r\n            \r\n            // Show the selected section\r\n            document.getElementById(`${sectionId}-section`).style.display = 'block';\r\n            \r\n            // Update page title and subtitle\r\n            updatePageTitle(sectionId);\r\n        }\r\n\r\n        // Update page title based on section\r\n        function updatePageTitle(sectionId) {\r\n            const titles = {\r\n                dashboard: { title: \"Seller Dashboard\", subtitle: \"Welcome back, TechStore! Here's your business overview.\" },\r\n                products: { title: \"Product Management\", subtitle: \"Manage your product catalog and inventory\" },\r\n                customers: { title: \"Customer Management\", subtitle: \"View and manage your customer relationships\" },\r\n                analytics: { title: \"Sales Analytics\", subtitle: \"Track your business performance and insights\" },\r\n                settings: { title: \"Account Settings\", subtitle: \"Configure your store settings and preferences\" }\r\n            };\r\n            \r\n            pageTitle.textContent = titles[sectionId].title;\r\n            pageSubtitle.textContent = titles[sectionId].subtitle;\r\n        }\r\n\r\n        // Render products in the products grid\r\n        function renderProducts() {\r\n            productsContainer.innerHTML = '';\r\n            \r\n            products.forEach(product => {\r\n                const productCard = document.createElement('div');\r\n                productCard.className = 'product-card';\r\n                productCard.innerHTML = `\r\n                    <div class=\"product-image\">\r\n                        <i class=\"fas fa-${product.image} fa-2x\"></i>\r\n                    </div>\r\n                    <div class=\"product-info\">\r\n                        <h3>${product.name}</h3>\r\n                        <p>${product.description}</p>\r\n                        <div class=\"product-price\">$${product.price.toFixed(2)}</div>\r\n                        <div style=\"font-size: 0.8rem; color: ${product.stock > 5 ? 'var(--success)' : 'var(--warning)'}; margin-bottom: 10px;\">\r\n                            ${product.stock} in stock\r\n                        </div>\r\n                        <div class=\"product-actions\">\r\n                            <button class=\"btn btn-outline edit-product\" data-id=\"${product.id}\">Edit</button>\r\n                            <button class=\"btn btn-primary view-product\" data-id=\"${product.id}\">View</button>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n                \r\n                productsContainer.appendChild(productCard);\r\n            });\r\n            \r\n            // Add event listeners to edit buttons\r\n            document.querySelectorAll('.edit-product').forEach(button => {\r\n                button.addEventListener('click', function() {\r\n                    const productId = parseInt(this.getAttribute('data-id'));\r\n                    openProductModal(productId);\r\n                });\r\n            });\r\n        }\r\n\r\n        // Open the product modal for adding or editing\r\n        function openProductModal(productId = null) {\r\n            editingProductId = productId;\r\n            \r\n            if (productId) {\r\n                // Editing existing product\r\n                modalTitle.textContent = \"Edit Product\";\r\n                const product = products.find(p => p.id === productId);\r\n                \r\n                document.getElementById('productName').value = product.name;\r\n                document.getElementById('productCategory').value = product.category;\r\n                document.getElementById('productDescription').value = product.description;\r\n                document.getElementById('productPrice').value = product.price;\r\n                document.getElementById('productStock').value = product.stock;\r\n            } else {\r\n                // Adding new product\r\n                modalTitle.textContent = \"Add New Product\";\r\n                productForm.reset();\r\n            }\r\n            \r\n            productModal.style.display = 'flex';\r\n        }\r\n\r\n        // Close the product modal\r\n        function closeProductModal() {\r\n            productModal.style.display = 'none';\r\n            editingProductId = null;\r\n        }\r\n\r\n        // Save product (add new or update existing)\r\n        function saveProduct() {\r\n            const productData = {\r\n                name: document.getElementById('productName').value,\r\n                category: document.getElementById('productCategory').value,\r\n                description: document.getElementById('productDescription').value,\r\n                price: parseFloat(document.getElementById('productPrice').value),\r\n                stock: parseInt(document.getElementById('productStock').value),\r\n                image: document.getElementById('productCategory').value // Simplified mapping\r\n            };\r\n            \r\n            if (editingProductId) {\r\n                // Update existing product\r\n                const index = products.findIndex(p => p.id === editingProductId);\r\n                products[index] = { ...products[index], ...productData };\r\n            } else {\r\n                // Add new product\r\n                const newId = products.length > 0 ? Math.max(...products.map(p => p.id)) + 1 : 1;\r\n                products.push({ id: newId, ...productData });\r\n            }\r\n            \r\n            // Update UI\r\n            renderProducts();\r\n            closeProductModal();\r\n            \r\n            // Show success message\r\n            alert(`Product ${editingProductId ? 'updated' : 'added'} successfully!`);\r\n        }\r\n\r\n        // Simulate chart loading\r\n        setTimeout(function() {\r\n            console.log(\"Analytics data loaded\");\r\n        }, 1000);\r\n\r\n        // Sample data update simulation\r\n        setInterval(function() {\r\n            // In a real app, this would fetch updated data from an API\r\n            const ordersElement = document.querySelector('.stat-card:nth-child(1) h3');\r\n            if (ordersElement) {\r\n                const currentOrders = parseInt(ordersElement.textContent);\r\n                ordersElement.textContent = currentOrders + Math.floor(Math.random() * 2);\r\n            }\r\n        }, 10000);"
        }
    ]
}