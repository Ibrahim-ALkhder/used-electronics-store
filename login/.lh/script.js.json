{
    "sourceFile": "script.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1758814381572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1758814381572,
            "name": "Commit-0",
            "content": " document.addEventListener('DOMContentLoaded', function() {\r\n            // Tab switching functionality\r\n            const tabs = document.querySelectorAll('.tab');\r\n            const tabContents = document.querySelectorAll('.tab-content');\r\n            \r\n            tabs.forEach(tab => {\r\n                tab.addEventListener('click', function() {\r\n                    const targetTab = this.getAttribute('data-tab');\r\n                    \r\n                    // Update active tab\r\n                    tabs.forEach(t => t.classList.remove('active'));\r\n                    this.classList.add('active');\r\n                    \r\n                    // Show corresponding content\r\n                    tabContents.forEach(content => {\r\n                        content.classList.remove('active');\r\n                        if (content.id === targetTab + 'Tab') {\r\n                            content.classList.add('active');\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n            \r\n            // Switch between login and register forms\r\n            document.getElementById('switchToRegister').addEventListener('click', function(e) {\r\n                e.preventDefault();\r\n                document.querySelector('.tab[data-tab=\"register\"]').click();\r\n            });\r\n            \r\n            document.getElementById('switchToLogin').addEventListener('click', function(e) {\r\n                e.preventDefault();\r\n                document.querySelector('.tab[data-tab=\"login\"]').click();\r\n            });\r\n            \r\n            // Password toggle functionality\r\n            function setupPasswordToggle(toggleId, inputId) {\r\n                const toggle = document.getElementById(toggleId);\r\n                const input = document.getElementById(inputId);\r\n                \r\n                toggle.addEventListener('click', function() {\r\n                    if (input.type === 'password') {\r\n                        input.type = 'text';\r\n                        toggle.innerHTML = '<i class=\"fas fa-eye-slash\"></i>';\r\n                    } else {\r\n                        input.type = 'password';\r\n                        toggle.innerHTML = '<i class=\"fas fa-eye\"></i>';\r\n                    }\r\n                });\r\n            }\r\n            \r\n            setupPasswordToggle('loginPasswordToggle', 'loginPassword');\r\n            setupPasswordToggle('registerPasswordToggle', 'registerPassword');\r\n            setupPasswordToggle('registerConfirmPasswordToggle', 'registerConfirmPassword');\r\n            \r\n            // Role selection functionality for both login and register\r\n            function setupRoleSelection(roleOptions, roleInput, buttonTextElement) {\r\n                roleOptions.forEach(option => {\r\n                    option.addEventListener('click', function() {\r\n                        // Remove selected class from all options\r\n                        roleOptions.forEach(opt => opt.classList.remove('selected'));\r\n                        \r\n                        // Add selected class to clicked option\r\n                        this.classList.add('selected');\r\n                        \r\n                        // Update hidden input value\r\n                        const role = this.getAttribute('data-role');\r\n                        roleInput.value = role;\r\n                        \r\n                        // Update button text\r\n                        if (buttonTextElement) {\r\n                            buttonTextElement.textContent = role.charAt(0).toUpperCase() + role.slice(1);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            \r\n            // Setup role selection for login\r\n            const loginRoleOptions = document.querySelectorAll('#loginTab .role-option');\r\n            const loginRoleInput = document.getElementById('loginRole');\r\n            const loginRoleText = document.getElementById('loginRoleText');\r\n            setupRoleSelection(loginRoleOptions, loginRoleInput, loginRoleText);\r\n            \r\n            // Setup role selection for register\r\n            const registerRoleOptions = document.querySelectorAll('#registerTab .role-option');\r\n            const registerRoleInput = document.getElementById('userRole');\r\n            setupRoleSelection(registerRoleOptions, registerRoleInput);\r\n            \r\n            // Set default role to buyer for both forms\r\n            document.querySelector('#loginTab .role-option[data-role=\"buyer\"]').classList.add('selected');\r\n            document.querySelector('#registerTab .role-option[data-role=\"buyer\"]').classList.add('selected');\r\n            \r\n            // Form validation functions\r\n            function validateEmail(email) {\r\n                const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n                return re.test(email);\r\n            }\r\n            \r\n            function validatePassword(password) {\r\n                return password.length >= 6 && /[0-9]/.test(password) && /[a-zA-Z]/.test(password);\r\n            }\r\n            \r\n            function validatePhone(phone) {\r\n                return phone === '' || /^\\+?[\\d\\s-()]{10,}$/.test(phone);\r\n            }\r\n            \r\n            function showError(input, errorElement, message) {\r\n                input.classList.add('error');\r\n                input.classList.remove('success');\r\n                errorElement.textContent = message;\r\n                errorElement.style.display = 'block';\r\n            }\r\n            \r\n            function showSuccess(input, errorElement) {\r\n                input.classList.remove('error');\r\n                input.classList.add('success');\r\n                errorElement.style.display = 'none';\r\n            }\r\n            \r\n            // Login form validation\r\n            const loginForm = document.getElementById('loginForm');\r\n            const loginEmail = document.getElementById('loginEmail');\r\n            const loginPassword = document.getElementById('loginPassword');\r\n            const loginEmailError = document.getElementById('loginEmailError');\r\n            const loginPasswordError = document.getElementById('loginPasswordError');\r\n            \r\n            loginForm.addEventListener('submit', function(e) {\r\n                e.preventDefault();\r\n                let isValid = true;\r\n                \r\n                // Validate email\r\n                if (!validateEmail(loginEmail.value)) {\r\n                    showError(loginEmail, loginEmailError, 'Please enter a valid email address');\r\n                    isValid = false;\r\n                } else {\r\n                    showSuccess(loginEmail, loginEmailError);\r\n                }\r\n                \r\n                // Validate password\r\n                if (loginPassword.value.length < 6) {\r\n                    showError(loginPassword, loginPasswordError, 'Password must be at least 6 characters');\r\n                    isValid = false;\r\n                } else {\r\n                    showSuccess(loginPassword, loginPasswordError);\r\n                }\r\n                \r\n                if (isValid) {\r\n                    // Simulate login process\r\n                    const role = loginRoleInput.value;\r\n                    loginForm.querySelector('.btn-primary').innerHTML = `<i class=\"fas fa-spinner fa-spin\"></i> Signing In as ${role.charAt(0).toUpperCase() + role.slice(1)}...`;\r\n                    \r\n                    setTimeout(() => {\r\n                        alert(`Login successful! Welcome back ${role === 'buyer' ? 'shopper' : 'seller'}! Redirecting to your ${role} dashboard...`);\r\n                        loginForm.querySelector('.btn-primary').innerHTML = `Sign In as ${role.charAt(0).toUpperCase() + role.slice(1)}`;\r\n                        // In a real application, you would redirect to the appropriate dashboard based on role\r\n                    }, 1500);\r\n                }\r\n            });\r\n            \r\n            // Register form validation\r\n            const registerForm = document.getElementById('registerForm');\r\n            const registerName = document.getElementById('registerName');\r\n            const registerEmail = document.getElementById('registerEmail');\r\n            const registerPhone = document.getElementById('registerPhone');\r\n            const registerPassword = document.getElementById('registerPassword');\r\n            const registerConfirmPassword = document.getElementById('registerConfirmPassword');\r\n            const agreeTerms = document.getElementById('agreeTerms');\r\n            \r\n            const registerNameError = document.getElementById('registerNameError');\r\n            const registerEmailError = document.getElementById('registerEmailError');\r\n            const registerPhoneError = document.getElementById('registerPhoneError');\r\n            const registerPasswordError = document.getElementById('registerPasswordError');\r\n            const registerConfirmPasswordError = document.getElementById('registerConfirmPasswordError');\r\n            const agreeTermsError = document.getElementById('agreeTermsError');\r\n            \r\n            registerForm.addEventListener('submit', function(e) {\r\n                e.preventDefault();\r\n                let isValid = true;\r\n                \r\n                // Validate name\r\n                if (registerName.value.trim() === '') {\r\n                    showError(registerName, registerNameError, 'Please enter your full name');\r\n                    isValid = false;\r\n                } else {\r\n                    showSuccess(registerName, registerNameError);\r\n                }\r\n                \r\n                // Validate email\r\n                if (!validateEmail(registerEmail.value)) {\r\n                    showError(registerEmail, registerEmailError, 'Please enter a valid email address');\r\n                    isValid = false;\r\n                } else {\r\n                    showSuccess(registerEmail, registerEmailError);\r\n                }\r\n                \r\n                // Validate phone (optional)\r\n                if (!validatePhone(registerPhone.value)) {\r\n                    showError(registerPhone, registerPhoneError, 'Please enter a valid phone number');\r\n                    isValid = false;\r\n                } else {\r\n                    showSuccess(registerPhone, registerPhoneError);\r\n                }\r\n                \r\n                // Validate password\r\n                if (!validatePassword(registerPassword.value)) {\r\n                    showError(registerPassword, registerPasswordError, 'Password must be at least 6 characters with a number and letter');\r\n                    isValid = false;\r\n                } else {\r\n                    showSuccess(registerPassword, registerPasswordError);\r\n                }\r\n                \r\n                // Validate password confirmation\r\n                if (registerPassword.value !== registerConfirmPassword.value) {\r\n                    showError(registerConfirmPassword, registerConfirmPasswordError, 'Passwords do not match');\r\n                    isValid = false;\r\n                } else {\r\n                    showSuccess(registerConfirmPassword, registerConfirmPasswordError);\r\n                }\r\n                \r\n                // Validate terms agreement\r\n                if (!agreeTerms.checked) {\r\n                    agreeTermsError.style.display = 'block';\r\n                    isValid = false;\r\n                } else {\r\n                    agreeTermsError.style.display = 'none';\r\n                }\r\n                \r\n                if (isValid) {\r\n                    // Simulate registration process\r\n                    registerForm.querySelector('.btn-primary').innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Creating Account...';\r\n                    \r\n                    setTimeout(() => {\r\n                        // Show success message and switch to login tab\r\n                        document.getElementById('successMessage').style.display = 'block';\r\n                        registerForm.reset();\r\n                        registerForm.querySelector('.btn-primary').innerHTML = 'Create Account';\r\n                        \r\n                        // Reset role selection\r\n                        document.querySelector('#registerTab .role-option[data-role=\"buyer\"]').classList.add('selected');\r\n                        document.querySelector('#registerTab .role-option[data-role=\"seller\"]').classList.remove('selected');\r\n                        \r\n                        // Switch to login tab after 2 seconds\r\n                        setTimeout(() => {\r\n                            document.querySelector('.tab[data-tab=\"login\"]').click();\r\n                            document.getElementById('successMessage').style.display = 'none';\r\n                        }, 2000);\r\n                    }, 1500);\r\n                }\r\n            });\r\n            \r\n            // Real-time validation for better UX\r\n            registerEmail.addEventListener('blur', function() {\r\n                if (!validateEmail(this.value)) {\r\n                    showError(this, registerEmailError, 'Please enter a valid email address');\r\n                } else {\r\n                    showSuccess(this, registerEmailError);\r\n                }\r\n            });\r\n            \r\n            registerPassword.addEventListener('blur', function() {\r\n                if (!validatePassword(this.value)) {\r\n                    showError(this, registerPasswordError, 'Password must be at least 6 characters with a number and letter');\r\n                } else {\r\n                    showSuccess(this, registerPasswordError);\r\n                }\r\n            });\r\n            \r\n            registerConfirmPassword.addEventListener('blur', function() {\r\n                if (this.value !== registerPassword.value) {\r\n                    showError(this, registerConfirmPasswordError, 'Passwords do not match');\r\n                } else {\r\n                    showSuccess(this, registerConfirmPasswordError);\r\n                }\r\n            });\r\n        });"
        }
    ]
}